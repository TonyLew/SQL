/*
//
// National TeleConsultants LLC
//
//  This product includes software developed at
//  National TeleConsultants LLC
//  550 North Brand Blvd
//  17th Floor
//  Glendale, CA 91203-1944  USA
//
//  Web:        http://www.ntc.com
//
// Project: N3968-A
// Module:  DINGOCT database creation script.
// Created: 2013-Oct-23
// Author:  Tony Lew
// 
// Purpose: Database creation only.
//    
//
//   Current revision:
//     Release:   2.0
//     Revision:  $Id: DBCreationScript.sql 3483 2014-02-11 18:34:38Z tlew $
//    
//
*/ 

USE [MASTER]
GO
/****** OBJECT:  DATABASE [DINGOCT]    SCRIPT DATE: 09/17/2013 11:44:27 ******/
--DROP DATABASE [DINGOCT] 
CREATE DATABASE [DINGOCT] ON  PRIMARY 
( NAME = N'DINGOCT', FILENAME = N'D:\DATA\DINGOCT.MDF' , SIZE = 145408KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB ),
FILEGROUP Partition1
( NAME = Partition1,
    FILENAME = 'D:\Data\DingoCTPartition1.ndf',
    SIZE = 100,
    MAXSIZE = UNLIMITED,
    FILEGROWTH = 5 )
 LOG ON 
( NAME = N'DINGOCT_LOG', FILENAME = N'D:\LOG\DINGOCT.LDF' , SIZE = 353920KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
GO
ALTER DATABASE [DINGOCT] SET COMPATIBILITY_LEVEL = 100
GO
IF (1 = FULLTEXTSERVICEPROPERTY('ISFULLTEXTINSTALLED'))
BEGIN
EXEC [DINGOCT].[DBO].[SP_FULLTEXT_DATABASE] @ACTION = 'ENABLE'
END
GO
ALTER DATABASE [DINGOCT] SET ANSI_NULL_DEFAULT OFF
GO
ALTER DATABASE [DINGOCT] SET ANSI_NULLS OFF
GO
ALTER DATABASE [DINGOCT] SET ANSI_PADDING OFF
GO
ALTER DATABASE [DINGOCT] SET ANSI_WARNINGS OFF
GO
ALTER DATABASE [DINGOCT] SET ARITHABORT OFF
GO
ALTER DATABASE [DINGOCT] SET AUTO_CLOSE OFF
GO
ALTER DATABASE [DINGOCT] SET AUTO_CREATE_STATISTICS ON
GO
ALTER DATABASE [DINGOCT] SET AUTO_SHRINK OFF
GO
ALTER DATABASE [DINGOCT] SET AUTO_UPDATE_STATISTICS ON
GO
ALTER DATABASE [DINGOCT] SET CURSOR_CLOSE_ON_COMMIT OFF
GO
ALTER DATABASE [DINGOCT] SET CURSOR_DEFAULT  GLOBAL
GO
ALTER DATABASE [DINGOCT] SET CONCAT_NULL_YIELDS_NULL OFF
GO
ALTER DATABASE [DINGOCT] SET NUMERIC_ROUNDABORT OFF
GO
ALTER DATABASE [DINGOCT] SET QUOTED_IDENTIFIER OFF
GO
ALTER DATABASE [DINGOCT] SET RECURSIVE_TRIGGERS OFF
GO
ALTER DATABASE [DINGOCT] SET  ENABLE_BROKER
GO
ALTER DATABASE [DINGOCT] SET AUTO_UPDATE_STATISTICS_ASYNC OFF
GO
ALTER DATABASE [DINGOCT] SET DATE_CORRELATION_OPTIMIZATION OFF
GO
ALTER DATABASE [DINGOCT] SET TRUSTWORTHY OFF
GO
ALTER DATABASE [DINGOCT] SET ALLOW_SNAPSHOT_ISOLATION ON
GO
ALTER DATABASE [DINGOCT] SET PARAMETERIZATION SIMPLE
GO
ALTER DATABASE [DINGOCT] SET READ_COMMITTED_SNAPSHOT ON
GO
ALTER DATABASE [DINGOCT] SET HONOR_BROKER_PRIORITY OFF
GO
ALTER DATABASE [DINGOCT] SET  READ_WRITE
GO
ALTER DATABASE [DINGOCT] SET RECOVERY FULL
GO
ALTER DATABASE [DINGOCT] SET  MULTI_USER
GO
ALTER DATABASE [DINGOCT] SET PAGE_VERIFY CHECKSUM
GO
ALTER DATABASE [DINGOCT] SET DB_CHAINING OFF
GO


--ALTER DATABASE TempDB MODIFY FILE
--(NAME = tempdev, FILENAME = 'E:\TempDB\DINGOCTtempdb.mdf')
--GO
--ALTER DATABASE TempDB MODIFY FILE
--(NAME = templog, FILENAME = 'E:\TempDB\DINGOCTtemplog.ldf')
--GO



-----------------------------------------------------------------------------------------------------------------
--PARTITION CREATION 
-----------------------------------------------------------------------------------------------------------------


--USE [master]
--GO
/****** Object:  Database [DINGOCT]    Script Date: 09/17/2013 11:44:27 ******/
--CREATE DATABASE [DINGOCT] ON  PRIMARY 
--( NAME = N'DINGOCT', FILENAME = N'D:\SQLData\DINGOCT.mdf' , SIZE = 145408KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
--FILEGROUP SDB
--( NAME = Group1,
--    FILENAME = 'D:\SQLData\SDBGroup1.ndf',
--    SIZE = 100,
--    MAXSIZE = UNLIMITED,
--    FILEGROWTH = 5 ),
----( NAME = SGrp1Fi2_dat,
----    FILENAME = 'D:\SalesData\SG1Fi2dt.ndf',
----    SIZE = 10,
----    MAXSIZE = 50,
----    FILEGROWTH = 5 ),
----FILEGROUP SalesGroup2
----( NAME = SGrp2Fi1_dat,
----    FILENAME = 'D:\SalesData\SG2Fi1dt.ndf',
----    SIZE = 10,
----    MAXSIZE = 50,
----    FILEGROWTH = 5 ),
----( NAME = SGrp2Fi2_dat,
----    FILENAME = 'D:\SalesData\SG2Fi2dt.ndf',
----    SIZE = 10,
----    MAXSIZE = 50,
----    FILEGROWTH = 5 )
-- LOG ON 
--( NAME = N'DINGOCT_log', FILENAME = N'D:\SQLLog\DINGOCT.ldf' , SIZE = 353920KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
--GO
--ALTER DATABASE [DINGOCT] SET COMPATIBILITY_LEVEL = 100
--GO
--IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
--begin
--EXEC [DINGOCT].[dbo].[sp_fulltext_database] @action = 'enable'
--end
--GO
--ALTER DATABASE [DINGOCT] SET ANSI_NULL_DEFAULT OFF
--GO
--ALTER DATABASE [DINGOCT] SET ANSI_NULLS OFF
--GO
--ALTER DATABASE [DINGOCT] SET ANSI_PADDING OFF
--GO
--ALTER DATABASE [DINGOCT] SET ANSI_WARNINGS OFF
--GO
--ALTER DATABASE [DINGOCT] SET ARITHABORT OFF
--GO
--ALTER DATABASE [DINGOCT] SET AUTO_CLOSE OFF
--GO
--ALTER DATABASE [DINGOCT] SET AUTO_CREATE_STATISTICS ON
--GO
--ALTER DATABASE [DINGOCT] SET AUTO_SHRINK OFF
--GO
--ALTER DATABASE [DINGOCT] SET AUTO_UPDATE_STATISTICS ON
--GO
--ALTER DATABASE [DINGOCT] SET CURSOR_CLOSE_ON_COMMIT OFF
--GO
--ALTER DATABASE [DINGOCT] SET CURSOR_DEFAULT  GLOBAL
--GO
--ALTER DATABASE [DINGOCT] SET CONCAT_NULL_YIELDS_NULL OFF
--GO
--ALTER DATABASE [DINGOCT] SET NUMERIC_ROUNDABORT OFF
--GO
--ALTER DATABASE [DINGOCT] SET QUOTED_IDENTIFIER OFF
--GO
--ALTER DATABASE [DINGOCT] SET RECURSIVE_TRIGGERS OFF
--GO
--ALTER DATABASE [DINGOCT] SET  ENABLE_BROKER
--GO
--ALTER DATABASE [DINGOCT] SET AUTO_UPDATE_STATISTICS_ASYNC OFF
--GO
--ALTER DATABASE [DINGOCT] SET DATE_CORRELATION_OPTIMIZATION OFF
--GO
--ALTER DATABASE [DINGOCT] SET TRUSTWORTHY OFF
--GO
--ALTER DATABASE [DINGOCT] SET ALLOW_SNAPSHOT_ISOLATION OFF
--GO
--ALTER DATABASE [DINGOCT] SET PARAMETERIZATION SIMPLE
--GO
--ALTER DATABASE [DINGOCT] SET READ_COMMITTED_SNAPSHOT OFF
--GO
--ALTER DATABASE [DINGOCT] SET HONOR_BROKER_PRIORITY OFF
--GO
--ALTER DATABASE [DINGOCT] SET  READ_WRITE
--GO
--ALTER DATABASE [DINGOCT] SET RECOVERY FULL
--GO
--ALTER DATABASE [DINGOCT] SET  MULTI_USER
--GO
--ALTER DATABASE [DINGOCT] SET PAGE_VERIFY CHECKSUM
--GO
--ALTER DATABASE [DINGOCT] SET DB_CHAINING OFF
--GO



--ALTER DATABASE DINGOCT
--REMOVE FILE Partition1
--GO

--select * from sys.filegroups
--select * from sys.partitions
--select * from sys.partition_functions
--select * from sys.partition_schemes


--ALTER DATABASE DINGOCT
--ADD FILEGROUP SDB
--GO

--ALTER DATABASE DINGOCT
--ADD FILE
--( NAME = Partition1,
--    FILENAME = 'E:\Data\SDBPartition1.ndf',
--    SIZE = 100,
--    MAXSIZE = UNLIMITED,
--    FILEGROWTH = 5 )
--TO FILEGROUP SDB


--DECLARE @DatePartitionScheme nvarchar(max) = N'CREATE PARTITION FUNCTION DATEPartition (DATE) AS RANGE RIGHT FOR VALUES (';
--DECLARE @i datetime2 = '19900101';
--DECLARE @m int = 12
--WHILE @i <= '20500101'
--BEGIN
--                SET @DatePartitionScheme += '''' + CAST( CONVERT(DATE, @i, 121) AS VARCHAR(50)) + '''' + N', ';
--                SET @i = DATEADD(DD, 1, @i);
--                SET @m = @m + 1           
--END
--SET @DatePartitionScheme += '''' + 'Sales_' + CAST((@m % 12) + 1  AS varchar(2)) + '''' + N');';
--select  @DatePartitionScheme;
----EXEC sp_executesql @DatePartitionScheme;
--GO



--1. Create Partition Function
--DROP PARTITION FUNCTION [DATEPartition]
--CREATE PARTITION FUNCTION [DATEPartition] (DATE)
--AS RANGE RIGHT FOR VALUES 
--('2014-04-01','2014-04-02','2014-04-03','2014-04-04','2014-04-05','2014-04-06','2014-04-07','2014-04-08','2014-04-09','2014-04-10')

USE DINGOCT
GO

--DROP PARTITION FUNCTION [DayOfYearPartition]
CREATE PARTITION FUNCTION [DayOfYearPartition] (INT)
AS RANGE RIGHT FOR VALUES 
(

1,2,3,4,5,6,7,8,9,
10,11,12,13,14,15,16,17,18,19,
20,21,22,23,24,25,26,27,28,29,
30,31,32,33,34,35,36,37,38,39,
40,41,42,43,44,45,46,47,48,49,
50,51,52,53,54,55,56,57,58,59,
60,61,62,63,64,65,66,67,68,69,
70,71,72,73,74,75,76,77,78,79,
80,81,82,83,84,85,86,87,88,89,
90,91,92,93,94,95,96,97,98,99,

100,101,102,103,104,105,106,107,108,109,
110,111,112,113,114,115,116,117,118,119,
120,121,122,123,124,125,126,127,128,129,
130,131,132,133,134,135,136,137,138,139,
140,141,142,143,144,145,146,147,148,149,
150,151,152,153,154,155,156,157,158,159,
160,161,162,163,164,165,166,167,168,169,
170,171,172,173,174,175,176,177,178,179,
180,181,182,183,184,185,186,187,188,189,
190,191,192,193,194,195,196,197,198,199,

200,201,202,203,204,205,206,207,208,209,
210,211,212,213,214,215,216,217,218,219,
220,221,222,223,224,225,226,227,228,229,
230,231,232,233,234,235,236,237,238,239,
240,241,242,243,244,245,246,247,248,249,
250,251,252,253,254,255,256,257,258,259,
260,261,262,263,264,265,266,267,268,269,
270,271,272,273,274,275,276,277,278,279,
280,281,282,283,284,285,286,287,288,289,
290,291,292,293,294,295,296,297,298,299,

300,301,302,303,304,305,306,307,308,309,
310,311,312,313,314,315,316,317,318,319,
320,321,322,323,324,325,326,327,328,329,
330,331,332,333,334,335,336,337,338,339,
340,341,342,343,344,345,346,347,348,349,
350,351,352,353,354,355,356,357,358,359,
360,361,362,363,364,365,366

);






--2. Create Partition Scheme,
--DROP PARTITION SCHEME [DATEPartitionKeyScheme]
--CREATE PARTITION SCHEME [DATEPartitionKeyScheme]
--AS PARTITION [DATEPartitionKey]
--ALL TO ( Partition1 )


--DROP PARTITION SCHEME [DayOfYearPartitionScheme]
CREATE PARTITION SCHEME [DayOfYearPartitionScheme]
AS PARTITION [DayOfYearPartition]
ALL TO ( Partition1 )




--SELECT	sdf.name				AS [FileName],
--		sdf.size/128			AS [Size_in_MB],
--		fg.name					AS [File_Group_Name]

--FROM	sys.database_files sdf
--JOIN	sys.filegroups fg
--ON		sdf.data_space_id = fg.data_space_id


--SELECT * FROM sys.database_files sdf
--SELECT * FROM sys.filegroups fg




--3. Drop/Recreate Clustered Index on Table to Move it on Partition scheme
--ALTER TABLE ChannelStatus DROP CONSTRAINT [PK_ChannelStatus]

--ALTER TABLE dbo.ChannelStatus ADD CONSTRAINT [PK_ChannelStatus] PRIMARY KEY CLUSTERED 
--(
--	[ChannelStatusID] ASC, SDBSourceID ASC
--)
--WITH
--(	PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF,
--	IGNORE_DUP_KEY = OFF, ONLINE = ON, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON
--)
--	 ON [SDBPartitionKeyScheme](SDBSourceID);
--GO

--SDB_IESPOT





